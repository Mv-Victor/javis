######## 基本配置 ########

# 是否是生产环境
# 是否为生产环境，生产环境下只有正式的支付渠道可用，测试渠道将不会真实充值
production: true

# Web 服务监听地址
listen: 0.0.0.0:8080

# 日志文件存储目录，留空则写入到标准输出
#log-path: /data/logs/ai-server

# 临时文件存储目录
temp-dir: "/tmp"

# 是否启用跨域支持
enable-cors: true

# 是否启用迁移，启用后，当数据结构有更新时，会自动更新数据库
enable-migrate: true

# 是否记录聊天记录到 messages 表
enable-recordchat: true

# 是否启用 Websocket 支持
# 启用后，当客户端版本 >= 1.0.7 时，聊天协议使用 Websocket 代替 OpenAI 兼容的 SSE 协议
enable-websocket: true

# 是否在日志中输出 SQL 语句
debug-with-sql: false

# 是否启用 API Keys 功能 【该功能尚未完成】
# 该功能启用后，可以对外开放 OpenAI 兼容的 API，客户端也会显示 API Keys 管理界面
enable-api-keys: false

# Universal Link 配置，留空则使用以下默认值
# universal-link-config: |
#   {"applinks":{"apps":[],"details":[{"appID":"N95437SZ2A.cc.aicode.flutter.askaide.askaide","paths":["/wechat-login/*","/wechat-links/*"]}]}}

# 是否启用模型请求频率限制，当前限制只支持每分钟 5 次/用户
enable-model-rate-limit: false

# 是否启用自定义首页模型，启用后注意执行 2023101701-ddl.sql 数据迁移
enable-custom-home-models: false

# 数据库配置 (账号:密码@tcp(数据库地址:端口)/数据库名?charset=utf8mb4&parseTime=True&loc=Local)
db-uri: "root:123456@tcp(localhost:13306)/aidea_server?charset=utf8mb4&parseTime=True&loc=Local"

# Redis 配置
redis-host: localhost
redis-port: 6379
redis-password: "123456"

# 代理服务器
# 如果启用了 xxx-autoproxy，则该选项必须
# socks5-proxy: 127.0.0.1:1080
# HTTP 代理放置，支持 http、https、socks5，代理类型由 URL schema 决定，如果 scheme 为空，则默认为 http
# 注意：配置 proxy-url 后， socks5-proxy 配置失效
# proxy-url: ""

# 任务队列：用于处理图片生成、邮件发送、短信发送、用户注册等耗时任务
# 这里指任务队列工作线程（Goroutine）数量，设置为 0 则不启用任务队列，该进程实例无法处理上述任务
queue-workers: 10
# 定时任务
enable-scheduler: true

# 支持的短信通道，支持 aliyun, tencent，配置多个则随机选择
sms-channels: [ "aliyun", "tencent" ]

# 是否提示用户绑定手机号
should-bind-phone: false
  
# Web 服务的基础 URL，例如 https://web.aicode.cc
base-url: ""

######## OpenAI 配置 ########

# 是否启用 OpenAI
enable-openai: true

# 是否启用 OpenAI 代理，依赖于 socks5-proxy 配置
openai-autoproxy: false
# OpenAI 服务配置
openai-organization: ""
# OpenAI 服务地址，可以配置多个，用于负载均衡
openai-servers: [ "https://oneapi.fastgpt.in" ]
# OpenAI API Key，可以配置多个，用于负载均衡
openai-keys: [ "sk-93c94OZK9Ha1IzI7Ae8e45712e8a4cA0A23c534f86Fe711f" ]

# Azure OpenAI 服务配置
#openai-azure: true
#openai-apiversion: "2023-05-15"
#openai-servers: ["https://xxxx.openai.azure.com"]
#openai-keys: ["xxxxxxxxxxxxxxxxxxxxxxx"]

######## OpenAI 备用配置 ########
# 当主 OpenAI 访问遇到一些问题时，切换备用配置继续尝试
# 目前支持的切换问题为：内容风控

# 是否启用备用 OpenAI 服务
enable-fallback-openai: false
# 是否使用备用的 Azure 的 OpenAI 服务
fallback-openai-azure: false
# Azure OpenAI 服务版本
fallback-openai-apiversion: "2023-05-15"
# 是否使用 Socks5 代理访问 OpenAI 服务
fallback-openai-autoproxy: false
# OpenAI 服务配置
fallback-openai-organization: ""
# 备用的 OpenAI 服务器地址，配置多个时会自动在多个服务之间平衡负载，不要忘记在在 URL 后面添加 /v1
fallback-openai-servers: [ "https://api.openai.com/v1" ]
# 备用的 OpenAI Keys，如果指定多个，会在多个服务之间平衡负载
fallback-openai-keys: [ "" ]

######## OpenAI Dalle 配置 ########
# OpenAI Dalle 服务配置，用于文生图
enable-openai-dalle: false
# 复用 OpenAI 配置
dalle-using-openai-setting: true
openai-dalle-autoproxy: false
openai-dalle-azure: false
openai-dalle-apiversion: "2023-05-15"
openai-dalle-organization: ""
openai-dalle-servers: [ "https://api.openai.com/v1" ]
openai-dalle-keys: [ "" ]

######## Anthropic #######

# API 申请：https://www.anthropic.com/

# 是否启用 Anthropic
enable-anthropic: false

# 是否启用 Anthropic 代理，依赖于 socks5-proxy 配置
anthropic-autoproxy: false
# Anthropic 服务地址
anthropic-server: "https://api.anthropic.com"
# Anthropic API Key
anthropic-apikey: ""

######## Google AI ########

# API 申请：https://ai.google.dev/

# 是否启用 Google AI
enable-googleai: false

# 是否启用 Google AI 代理，依赖于 socks5-proxy 配置
googleai-autoproxy: false
# Google AI 服务地址
googleai-server: "https://generativelanguage.googleapis.com"
# Google AI API Key
googleai-key: ""

######## 百度文心大模型 ########

# API 申请：https://cloud.baidu.com/product/wenxinworkshop

# 是否启用百度文心大模型
enable-baiduwxai: false

#baiduwx-key: ""
#baiduwx-secret: ""

######### 阿里灵积模型 ########

# API 申请：https://dashscope.aliyun.com/

# 是否启用阿里云灵积模型平台
enable-dashscopeai: false
#dashscope-key: ""
#dashscope-keys: []

######### 讯飞星火大语言模型 ########

# API 申请：https://xinghuo.xfyun.cn/
# 是否启用讯飞星火模型
enable-xfyunai: false

#xfyun-appid: ""
#xfyun-apikey: ""
#xfyun-apisecret: ""

######## 商汤日日新 ########

# API 申请：https://console.sensenova.cn/

enable-sensenovaai: false
sensenova-keyid: ""
sensenova-keysecret: ""

######### 百川大模型 ########

# API 申请 https://platform.baichuan-ai.com/
enable-baichuan: false
baichuan-apikey: ""
baichuan-secret: ""

######## 天工 ########

# API 申请 https://model-platform.tiangong.cn
enable-sky: false
sky-appkey: ""
sky-appsecret: ""

######## 360 智脑 ########

# API 申请 https://ai.360.com
enable-gpt360: false
gpt360-apikey: ""

######## 智谱 #########

# API 申请 https://open.bigmodel.cn
enable-zhipuai: false
zhipuai-key: ""

######## 月之暗面 ########

# API 申请 https://platform.moonshot.cn
enable-moonshot: false
moonshot-apikey: ""

######## ONEAPI ########

# https://github.com/songquanpeng/one-api

enable-oneapi: false
oneapi-server: ""
oneapi-key: ""

######## OpenRouter ########

# https://openrouter.ai/

# 支持的模型列表，
openrouter-support-models: [ "01-ai/yi-34b-chat" ]
openrouter-autoproxy: false
enable-openrouter: false
openrouter-server: "https://openrouter.ai/api/v1"
openrouter-key: ""

######## DeepAI 配置 ########

# 用于图片超分辨率、图片上色
# DeepAI API 申请：https://deepai.org/

enable-deepai: false
# 是否启用 DeepAI 代理，依赖于 socks5-proxy 配置
deepai-autoproxy: true
deepai-servers: [ "https://api.deepai.org" ]
deepai-key: ""

######## StabilityAI 配置 ########

# 官方提供的 Stable Diffusion 托管服务，用于文生图、图生图
# API 申请：https://stability.ai/

enable-stabilityai: false
# 是否启用 StabilityAI 代理，依赖于 socks5-proxy 配置
stabilityai-autoproxy: true
stabilityai-servers: [ "https://api.stability.ai" ]
stabilityai-organization: ""
stabilityai-key: ""

######## LeapAI 配置 ########

# Leap 提供的 Stable Diffusion 托管服务，用于文生图、图生图
# API 申请：https://tryleap.ai/

enable-leapai: false
# 是否启用 LeapAI 代理，依赖于 socks5-proxy 配置
leapai-autoproxy: false
leapai-servers: [ "https://api.tryleap.ai" ]
leapai-key: ""

######## 6pen 配置 ########

# 国内厂商 6pen 提供的 Stable Diffusion 托管服务，用于文生图、图生图
# API 申请：https://fromston.6pen.art/

enable-fromstonai: false
fromston-server: https://ston.6pen.art
fromston-key: ""

######## getimg.ai ########

# getimg.ai 提供的图片生成服务，用于文生图、图生图
# API 申请：https://getimg.ai/tools/api

enable-getimgai: false
getimgai-autoproxy: false
getimgai-server: "https://api.getimg.ai"
getimgai-key: ""

######## lepton.ai ########

# lepton.ai 的模型用来为 艺术字、艺术二维码 提供服务
# API 申请：https://www.lepton.ai/
enable-leptonai: false
leptonai-autoproxy: false
leptonai-qr-servers: [ "https://aiqr.lepton.run" ]
leptonai-keys: [ "" ]

# 艺术字字体文件，只支持 ttf 格式
font-path: "path/to/your/font/MaoKenShiJinHei-2.ttf"

######## 有道翻译配置 ########

# 用于提供文本翻译，文生图、图生图 prompt 翻译
# API 申请：https://ai.youdao.com/DOCSIRMA/html/trans/api/wbfy/index.html

translate-appid: ""
translate-appkey: ""

######## 七牛云存储配置 ########

# 用于提供图片存储服务，图片上传、图片下载、缩略图生成等

storage-appkey: "YDaZiPf7w_XpcaAjqBkx86NVB1o9NHZvHBTPWXvT"
storage-secret: "yuZbWaHG6qg4zPtq5doTtk0S8AfW5cey9VMZ_8yr"
storage-bucket: "javis"
# 七牛云存储资源访问域名（也可以用 CDN 域名），例如 https://cdn.example.com
storage-domain: snb8ks06e.hd-bkt.clouddn.com

# 七牛云存储回调地址，用于上传后的回调通知(可选)
# 以下是七牛云官方解释：
#     上传成功后，七牛云向业务服务器发送 POST 请求的 URL。必须是公网上可以正常进行 POST 请求并能响应 HTTP/1.1 200 OK 的有效 URL。
#     出于高可用的考虑，本字段允许设置多个 callbackUrl（用英文符号 ; 分隔），在前一个 callbackUrl 请求失败的时候会依次
#     重试下一个 callbackUrl。一个典型例子是：http://<ip1>/callback;http://<ip2>/callback，并同时指定下面的 callbackHost 字段。
#     在 callbackUrl 中使用 ip 的好处是减少对 dns 解析的依赖，可改善回调的性能和稳定性。
storage-callback: "https://ai-api.example.com/v1/callback/storage/qiniu"
# 如果有多个回调地址，可以使用数组
#storage-callbacks: [ "https://ai-api.example.com/v1/callback/storage/qiniu" ]
# storage-callback-host: ""


# 七牛云存储区域，可选值：
# 华东 - z0
# 华北 - z1
# 华南 - z2
# 南美 - na0, 
# 新加坡 - as0
# 华东浙江 2 区 - cn-east-2
# 亚太首尔 1 区 - ap-northeast-1
storage-region: "z0"

######## Apple 配置 ########

# 用于提供 Apple 登录、Apple 支付服务

apple-keyid: ""
apple-teamid: ""
#apple-secret: /data/webroot/ai-server/etc/apple-key.p8
apple-secret: ""

######## 邮件服务器配置 ########

# 用于邮箱注册、密码找回、邮件通知等
enable-mail: false
mail-from: AIdea
mail-username: ai@example.com
mail-password: "123456"
mail-host: smtp.qiye.aliyun.com
mail-port: 465
mail-ssl: true

######## 腾讯云云配置 ########

# 腾讯云云服务配置，提供语音合成、短信验证码服务

# 是否启用腾讯语音转文本服务（不启用则默认使用 OpenAI 的 Whisper 模型）
tencent-voice: false

tencent-id: ""
tencent-key: ""


# 腾讯云短信服务 appid
tencent-smssdkappid: "1400827805"
tencent-smstemplateid: "18220292"
tencent-smssign: "AIdea"

# 混元大模型
# API 申请：https://hunyuan.tencent.com/

# 是否启用腾讯混元大模型
enable-tencentai: false

######## 阿里云配置 ########

# 阿里云服务配置，提供短信验证码、内容安全服务（用于用户输入信息是否合规）

aliyun-key: ""
aliyun-secret: ""

# 是否启用内容安全检测（提示语敏感内容检测）
enable-contentdetect: false

# 短信配置
# 短信验证码模板 ID
aliyun-smstemplateid: "SMS_279000000"
aliyun-smssign: "AIdea"

######## 支付宝配置 ########

# 支付宝配置，用于支持 Android 端的支付宝支付

alipay-appid: ""
# APP 私钥文件路径
alipay-app-private-key: ""
# APP 公钥文件路径
alipay-app-public-key: ""
# 支付宝根证书文件路径
alipay-root-cert: ""
# 支付宝公钥文件路径
alipay-public-key: ""
# 支付宝通知地址
alipay-notify-url: https://your_domain/v1/payment/callback/alipay-notify
alipay-return-url: https://your_domain/public/payment/alipay-return
# 支付宝沙盒模式
#alipay-sandbox: true

######## 钉钉通知配置 ########

# 钉钉群通知 Token，留空则不通知，用于用户注册、支付通知到管理员
dingding-token: ""
dingding-secret: ""

######## 支付配置 ########

# 启用支付宝支付功能
enable-alipay: false
# 启用 Apple 应用内支付功能
enable-applepay: false

######## 国产化配置 ########

# 是否启用国产化模式，启用后，将使用 cnlocal-vendor/cnlocal-model 指定的模型替代数字人默认的 GPT 模型
cnlocal-mode: false
# 国产化模式只对 IOS 系统有效
cnlocal-onlyios: false
# 国产化模型服务商，目前支持讯飞星火、灵积、文心千帆、商汤日日新
cnlocal-vendor: "讯飞星火"
# 国产化模型名称，
# 讯飞星火支持 generalv2,
# 灵积支持 qwen-v1,
# 商汤日日新支持 nova-ptc-xl-v1，
# 文心千帆支持 model_ernie_bot_turbo、model_badiu_llama2_70b、model_baidu_llama2_7b_cn、
#    model_baidu_chatglm2_6b_32k、model_baidu_aquila_chat7b、model_baidu_bloomz_7b
cnlocal-model: "generalv2"

######## 默认文生图、图生图模型 ########
# 当用户没有选择风格时，默认使用这里配置的模型
default-img2img-model: lb-realistic-versionv4.0
default-txt2img-model: sb-stable-diffusion-xl-1024-v1-0

# 图生图图像识别处理模型，用于识别图像内容，生成图生图的提示语，目前支持 xfyun，留空则表示不启用
img2img-recognition-provider: ""

######## 价格相关 ########
# 智慧果收费标准、充值、赠送相关配置
# 系统内置默认规则，在 internal/coins 中定义，不指定该选项使用默认配置
# 指定该选项后，将以配置文件中的数据为准
#price-table-file: /data/webroot/aidea-server/etc/coins-table.yaml
price-table-file: ""

######## 免费模型 ########
# 是否启用免费聊天功能，启用后，未登录可以免费使用部分模型
free-chat-enabled: false
# 每日免费次数，基于客户端 IP 限制
free-chat-daily-limit: 5
# 每日全局免费次数，总的限制次数，不管是哪个 IP
free-chat-daily-global-limit: 1000
# 免费模型，所有的请求都会被替换为该模型
free-chat-model: gpt-3.5-turbo

######## 微信开放平台 ########
wechat-appid: ""
wechat-secret: ""

# 是否启用微信支付
wechatpay-enabled: false
# 微信支付商户号
wechatpay-mchid: "1600000000"
# 微信支付 API 证书序列号
wechatpay-cert-serial-number: "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
# 微信支付 APIv3 密钥
wechatpay-api-v3-key: "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
# 微信支付商户证书私钥路径
wechatpay-cert-private-key-path: "path/to/apiclient_cert.pem"
# 微信支付回调地址，格式 https://YOUR_SERVER_HOST/v1/payment/callback/wechat-pay/notify
wechatpay-notify-url: "https://YOUR_SERVER_HOST/v1/payment/callback/wechat-pay/notify"

######## Stripe ########
# 是否启用 Stripe 支付
# https://stripe.com/docs/development/quickstart#api-keys
enable-stripe: false
stripe-publishable-key: ""
stripe-secret-key: ""
stripe-webhook-secret: ""

######## 默认首页模型 ########
# 首页默认展示的模型，取值为表 models.model_id 的值
default-home-models: ["gpt-4o-mini", "gpt-4o"]
# IOS 系统默认首页模型，取值为表 models.model_id 的值，如果为空，则使用 default-home-models
default-home-models-ios: ["chat-3.5", "chat-4"]

######## 文本转语音 ########
# 文本转语音引擎，支持 minimax/openai/azure
text-to-voice-engine: openai
# Azure 语音服务区域
text-to-voice-azure-region: eastus
# Azure 语音服务 Key
text-to-voice-azure-key: ""

######## Minimax 配置 ########
# 当前只用于文本转语音
# API 申请：https://www.minimaxi.com
minimax-api-key: ""
minimax-group-id: ""
